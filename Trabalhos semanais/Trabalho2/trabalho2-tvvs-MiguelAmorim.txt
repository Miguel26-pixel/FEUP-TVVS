Miguel Amorim
10/11/2023

----- squareAt in the nl.tudelft.jpacman.board.Board class------

inputs : x, y (int)

assumptions: width, height (int)
index starts at 0

Categories:

x and y are valid : 0<=x<=width-1 (1), 0<=y<=height-1(2)
x and y are invalid : x<0(3), x>=w(4) y<0(5), y>=h(6)

outputs: Square (square)

Categories:

square != null(7)
square == null(8)


Boundary:

x=0,y=0 (1)(2)
x=0,y=1	(1)(2)
x=1,y=0 (2)(1)
x=1,y=1 (1)(2)
x=w-1,y=h-1 (1)(2)
x=w-1,y=h (6)(1)
x=w,y=h-1 (4)(2)
x=w,y=h (4)(6)
x=-1,y=0 (3)(2)
x=0,y=-1 (5)(1)
x=-1,y=-1 (3)(5)
x=w-1,y=-1 (1)(5)
x=-1,y=h-1 (2)(3)


------ createBoard in the nl.tudelft.jpacman.board.BoardFactory class ------

inputs : (Square[][]) grid

Categories:

non-null 2D array of Square objects (1)

null (2)

an empty 2D array (3)

an 2D array with some null elements (4)

an 2D array with all null elements (5)

Boundaries:

grid = {{new Square(), new Square()}}

grid = null

grid = {}

grid = {{null, new Square()}}

grid = {{null, null}}


----------createLevel in the nl.tudelft.jpacman.level.LevelFactory class--------


inputs : (Board) board , (List<Ghost>) ghosts, (List<Square>) startPositions

Categories: 

non-null (Board) board (1)

null (Board) board (2)

non-null list of Ghost Objects (3)

null list of Ghost objects (4)

an empty ghosts list (5)

a ghosts list with some null elements (6)

a ghosts list with just null elements (7)

non-null list of Square Objects (8)

null list of Square object (9)

a empty startPositions list (10)

a startPositions list with some null elements (11)

a startPositions list with just null elements (12)



Boundaries:

board = null (2)

board = new Board() (1)

ghosts = new List<Ghost>() (3)

ghosts = null (4)

ghosts = [] (5)

ghosts = [null, new Ghost()] (6)

ghosts = [null, null] (7)

startPositions = null (8)

startPositions = new List<Square>() (9)

startPositions = [] (10)

startPositions = [null, new Square()] (11)

startPositions = [null, null] (12)




----------makeGhostSquare in the nl.tudelft.jpacman.level.MapParser class--------



inputs : (List<Ghost>) ghosts, (Ghost) ghost

Assumptions : Board (board)

outputs : (Square) square

Categories: 

non-null list of Ghost Objects (1)

null list of Ghost objects (2)

an empty ghosts list (3)

a ghosts list with some null elements (4)

a ghosts list with just null elements (5)

non-null Ghost object (6)

null Ghost object (7)


Boundaries:

ghosts = new List<Ghost>() (1)

ghosts = null (2)

ghosts = [] (3)

ghosts = [null, new Ghost()] (4)

ghosts = [null, null] (5)

ghost = null (6)

ghost = new Ghost() (7)


----------draw in the nl.tudelft.jpacman.sprite.ImageSprite class--------


inputs : (int)x, (int)y, (int)width, (int)height, (Graphics) graphics

assumptions: board_width, board_height (int) (of board)
index starts at 0

Categories:

x and y are valid : 0<=x<=width-1 (1), 0<=y<=height-1(2)

x and y are invalid : x<0(3), x>=w(4) y<0(5), y>=h(6)

non-null (Graphics) graphics (7)

null (Graphics) graphics (8)

width is valid : 0<=x+width<=board_width-1 (9), width>0 (10)

width is invalid : x+width<0 (11), x+width>=board_width (12)

height is valid : 0<=y+height<=board_height-1 (13) , height>0 (14)

height is invalid : y+height<0 (15), y+height>=board_height (16)

Boundary:

x=0,y=0 (1)(2)
x=0,y=1	(1)(2)
x=1,y=0 (2)(1)
x=1,y=1 (1)(2)
x=w-1,y=h-1 (1)(2)
x=w-1,y=h (6)(1)
x=w,y=h-1 (4)(2)
x=w,y=h (4)(6)
x=-1,y=0 (3)(2)
x=0,y=-1 (5)(1)
x=-1,y=-1 (3)(5)
x=w-1,y=-1 (1)(5)
x=-1,y=h-1 (2)(3)

graphics = null (8)

graphics = new Graphics() (7)

width=-board_width,height=-board_heigth (10)(14)(11)(15)
width=board_width,height=board_heigth (12)(16)(9)(13)





